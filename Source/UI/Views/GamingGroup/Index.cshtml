@model UI.Models.GamingGroup.GamingGroupViewModel
@using UI.HtmlHelpers
@{
    ViewBag.Title = Model.Name;
    Layout = MVC.Shared.Views._BaseLayout;
}

<h2><span class="editable-title" id="gamingGroupTitle" title="Click to rename the gaming group">@Model.Name</span></h2>

<hr />

<a name="@ViewBag.PlayerSectionAnchorText"></a>
<div class="row">
    @{
        Html.RenderPartial("~/Views/Player/_PlayersPartial.cshtml", Model.Players, new ViewDataDictionary {{"canEdit", true}});
    }
</div>

<a name="@ViewBag.GameDefinitionSectionAnchorText"></a>
<div class="row">
    @Html.Partial("~/Views/GameDefinition/_GameDefinitionsPartial.cshtml", Model.GameDefinitionSummaries, new ViewDataDictionary { { "canEdit", true } })
</div>


<a name="@ViewBag.RecentGamesSectionAnchorText"></a>
<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="fl-left">
                Record A Played Game @ViewBag.RecentGamesMessage
            </h4>
            <div class="fl-right">
                @Html.ActionLink("Create New", "Create", "PlayedGame", new { }, new { @class = "btn btn-primary" })
            </div>
            <div class="fl-clear"></div>
        </div>
        @Html.Partial("~/Views/PlayedGame/_PlayedGamesPartial.cshtml", Model.RecentGames, new ViewDataDictionary { { "canEdit", true } })
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        //Creation
        $(document).ready(function () {
            var players = new window.Views.Player.Players();
            players.init();

            var createOrUpdatePlayer = new window.Views.Player.CreateOrUpdate();
            createOrUpdatePlayer.init($.proxy(players.onPlayerSaved, players));

            var gameDefinition = new window.Views.GameDefinition.CreateGameDefinitionPartial();
            gameDefinition.init();

            var gameDefinitions = new window.Views.GameDefinition.GameDefinitions();
            gameDefinitions.init();
            gameDefinition.onDefinitionCreated = $.proxy(gameDefinitions.onGameCreated, gameDefinitions);

            var gamingGroupView = new Views.GamingGroup.GamingGroupView();
            gamingGroupView.init();
        });
    </script>
}
