@using UI.Models.Badges
@model IEnumerable<UI.Models.Champions.ChampionChangeViewModel>
<div id="nemesisChangeVote" class="fl-right" style="margin-top: 21px; margin-bottom: 10.5px;"></div>
<div class="fl-clear"></div>
<div class="flip-scroll">
	<table class="table table-hover table-striped">
		<thead>
			<tr>
			    <th class="playername-head">Previous<span class="hidden-xs hidden-sm"> Champion</span></th>
				<th class="playername-head">
					New<span class="hidden-xs hidden-sm">Champion</span> <i class="@ChampionBadgeViewModel.FONT_AWESOME_CSS_CLASS" data-toggle="popover" data-placement="top"
                data-content="This Player now has the most wins for this board game!"></i></th>
			    <th class="gamename-head">Game</th>
			    <th>Date</th>
			</tr>
		</thead>
        @{ var position = 1; }
		@foreach (UI.Models.Champions.ChampionChangeViewModel championChange in Model)
		{
			<tr data-position="@position">
                @{ position++; }
			    <td>
			        @if (championChange.PreviousChampionPlayerId.HasValue)
			        {
			            @Html.ActionLink(championChange.PreviousChampionPlayerName, "Details", "Player", new {id = championChange.PreviousChampionPlayerId}, new { title = "View Player details"})
			        }
			        else
			        {
                        <span>&nbsp;</span>
			        }
			    </td>
				<td>@Html.ActionLink(championChange.NewChampionPlayerName, "Details", "Player", new { id = championChange.NewChampionPlayerId }, new { title = "View Player details"})</td>
                <td>@Html.ActionLink(championChange.GameName, "Details", "GameDefinition", new { id = championChange.GameDefinitionId }, new { title = "View Game Definition details" })</td>
			    <td>@championChange.DateCreated.ToShortDateString()</td>
			</tr>
		}
	</table>
</div>