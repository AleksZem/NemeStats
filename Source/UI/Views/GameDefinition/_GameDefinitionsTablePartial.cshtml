@model IList<UI.Models.GameDefinitionModels.GameDefinitionSummaryViewModel>

@{
    Layout = null;
}
<div class="panel-body">
    @if ((bool?)ViewData["canEdit"] == true)
    {
        <div class="well">
            @{ Html.RenderAction(MVC.GameDefinition.CreatePartial()); }
        </div>
                }
    <div class="gameDefinitionsList flip-scroll" id="gameDefinitionsList">
        <table class="table table-hover table-striped">
            <thead>
            <tr>
                <th class="col-md-2 bgg-link-head"></th>
                <th class="col-md-4 name-head sort" data-sort="name">
                    <span>Name <span class="fa fa-caret-down"></span> <span class="fa fa-caret-up"></span></span>
                </th>
                <th class="col-md-2 sort desc" data-sort="plays-col">
                    <span class="hidden-xs hidden-sm">
                            <span>Played Games</span>
                        </span>
                    <span class="hidden-md hidden-lg">
                            Plays
                        </span>
                    <span class="fa fa-caret-down"></span> <span class="fa fa-caret-up"></span>
                </th>
                <th class="col-md-3 sort" data-sort="champion-col">
                    <i class="fa fa-trophy" data-container="body" data-toggle="popover" data-placement="top"
                       data-content="The Champion is the Player within the Gaming Group with the most wins of this game."></i>
                    <span class="hidden-xs hidden-sm">
                            <span>Previous/Current Champion</span>
                        </span>
                    <span class="fa fa-caret-down"></span> <span class="fa fa-caret-up"></span>
                </th>
                @if (Model.Any() && Model.First().UserCanEdit)
                {
                    <th class="col-md-1 edit-head">&nbsp;</th>
                }
            </tr>
            </thead>
            <tbody class="list">
            @foreach (var item in Model)
            {
                <tr class="game-item">
                    <td class="bgg-link-col">
                        @if (item.HasBoardGameGeekDefinition)
                        {
                            if (!string.IsNullOrEmpty(item.BoardGameGeekGameDefinition.Thumbnail))
                            {
                                <a href="@Url.Action(MVC.GameDefinition.ActionNames.Details, MVC.GameDefinition.Name, new {id = item.Id})">
                                    <img class="bgg-thumbnail" src="@item.BoardGameGeekGameDefinition.Thumbnail" alt="View on BoardGameGeek.com" title="View on BoardGameGeek.com"/>
                                </a>
                            }
                            else
                            {
                                <a href="@item.BoardGameGeekGameDefinition.BoardGameGeekUri.AbsoluteUri" target="_blank;">
                                    <img src="~/Content/Images/bgg_small.png" alt="View on BoardGameGeek.com" title="View on BoardGameGeek.com"/>
                                </a>
                            }

                        }
                    </td>
                    <td class="name-col">
                        <b>
                            @Html.ActionLink(item.Name, "Details", "GameDefinition", new {id = item.Id}, new {@class = "name"})
                        </b>
                    </td>
                    <td class="plays-col">@Html.DisplayFor(modelItem => item.TotalNumberOfGamesPlayed)</td>
                    <td class="champion-col" data-champion="@(item.ChampionName ?? "-")">
                        @if (item.PreviousChampionName != null)
                        {
                            <span style="text-decoration: line-through">
                                    <b>
                                        @Html.ActionLink(item.PreviousChampionName,
                                            "Details",
                                            "Player",
                                            new {id = item.PreviousChampionPlayerId},
                                            new {})
                                    </b>
                                </span>
                            <span>/</span>
                        }
                        @if (item.ChampionName != null)
                        {
                            <b>
                                @Html.ActionLink(item.ChampionName, "Details", "Player", new {id = item.ChampionPlayerId}, new {})
                            </b>
                        }
                        else
                        {
                            <span>-</span>
                        }
                    </td>

                    @if (item.UserCanEdit)
                    {
                        <td class="edit-col">
                            <a href="@Url.Action("Edit", "GameDefinition", new
                                     {
                                         id = item.Id
                                     })" title="Edit">
                                <span class="fa fa-pencil fa-2x"></span>
                            </a>
                        </td>
                    }

                </tr>
            }
            </tbody>
        </table>
        <ul class="pagination"></ul>
    </div>
</div>