@model UI.Models.UniversalGameModels.UniversalGameDetailsViewModel

@{
    ViewBag.Title = "Universal Stats for " + Model.Name;
    Layout = MVC.Shared.Views._BaseLayout;
}

<div id="gamedefinition-details">
    <h2 class="page-header">
        @Html.DisplayFor(model => model.Name) - Universal Statistics
    </h2>
        <div class="row ">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h4>Game Info</h4>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-4">
                            @if (!string.IsNullOrEmpty(Model.ImageUrl))
                            {
                                <img class="thumbnail" src="@Model.ImageUrl" alt="@Model.Name" title="@Model.Name" />
                            }
                            else
                            {
                                <img class="thumbnail" src="@Model.ThumbnailImageUrl" alt="@Model.Name" title="@Model.Name" />
                            }

                        </div>
                        <div class="col-md-4 col-md-offset-4">
                            <table class="table well data">
                                @if (Model.MaxPlayers.HasValue && Model.MinPlayers.HasValue)
                                {
                                    string numberOfPlayersString;
                                    if (Model.MaxPlayers == Model.MinPlayers)
                                    {
                                        numberOfPlayersString = Model.MaxPlayers.Value.ToString();
                                    }
                                    else
                                    {
                                        numberOfPlayersString = Model.MinPlayers + " - " + Model.MaxPlayers + " players";
                                    }
                                    <tr>
                                        <td class="text-center"><i class="fa fa-users" data-toggle="tooltip" data-placement="left" title="Players"></i></td>
                                        <td>@numberOfPlayersString</td>
                                    </tr>
                                }
                                @if (Model.AveragePlayTime.HasValue)
                                {
                                    <tr>
                                        <td class="text-center"><i class="fa fa-clock-o" data-toggle="tooltip" data-placement="left" title="Average game duration"></i></td>
                                        <td>average @Model.AveragePlayTime minutes</td>
                                    </tr>
                                }
                                @if (Model.BoardGameGeekAverageWeight.HasValue & Model.BoardGameGeekAverageWeight > 0)
                                {
                                    <tr>
                                        <td class="text-center"><i class="fa fa-balance-scale" data-toggle="tooltip" data-placement="left" title="BGG Game weight"></i></td>
                                        <td>
                                            <div class="progress @Model..WeightDescription">
                                                <div class="progress-bar" role="progressbar" aria-valuenow="@Model.BoardGameGeekWeightPercent" aria-valuemin="0" aria-valuemax="100" style="width: @Model.BoardGameGeekWeightPercent%;" data-toggle="popover" data-placement="bottom" data-content="@Model.BoardGameGeekAverageWeight / 5">
                                                    @Model.BoardGameGeekAverageWeightDescription
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                                @if (Model.BoardGameGeekYearPublished.HasValue & Model.BoardGameGeekYearPublished > 0)
                                {
                                    <tr>
                                        <td class="text-center"><i class="fa fa-calendar" data-toggle="tooltip" data-placement="left" title="Year published"></i></td>
                                        <td>Published in @Model.BoardGameGeekYearPublished</td>
                                    </tr>
                                }
                                @if (Model.BoardGameGeekUri != null)
                                {
                                    <tr>
                                        <td class="text-center">
                                            <img src="~/Content/Images/bgg_small.png" />
                                        </td>
                                        <td><a href="@Model.BoardGameGeekUri.AbsoluteUri" target="_blank;">view on boardgamegeek.com</a></td>
                                    </tr>
                                }
                                @if (Model.BoardGameGeekCategories.Count > 0)
                                {
                                    <tr>
                                        <td class="text-center"><span class="fa fa-folder-open-o" data-toggle="tooltip" data-placement="left" title="Categories"></span></td>
                                        <td>
                                            @foreach (var category in Model.BoardGameGeekCategories)
                                            {
                                                <span class="label label-default">@category</span>
                                            }
                                        </td>
                                    </tr>
                                }
                                @if (Model.BoardGameGeekMechanics.Count > 0)
                                {
                                    <tr>
                                        <td class="text-center"><span class="fa fa-gears" data-toggle="tooltip" data-placement="left" title="Mechanics"></span></td>
                                        <td>
                                            @foreach (var mechanic in Model.BoardGameGeekMechanics)
                                            {
                                                <span class="label label-default">@mechanic</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>

                    </div>
                    <div class="row voffset4">
                        <div class="col-sm-12">
                            <blockquote class="bggdescription" data-readmore="true">
                                <p>
                                    @Html.Raw(Model.BoardGameGeekDescription)
                                </p>
                            </blockquote>
                        </div>
                    </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4>Global Statistics</h4>
            </div>
            <div class="panel-body">
                <table class="table table-hover table-striped">
                    <tr>
                        <td class="col-md-2"><strong>Total Games Played on NemeStats:</strong></td>
                        <td class="col-md-2">@Model.TotalNumberOfGamesPlayed</td>
                    </tr>
                    <tr>
                        <td><strong>Total Gaming Groups With This Game</strong></td>
                        <td>@Model.TotalGamingGroupsWithThisGame</td>
                    </tr>
                    <tr>
                        <td><strong>Average Players Per Game</strong></td>
                        <td>@Model.AveragePlayersPerGame</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    
    @{
        var gamingGroupData = Model.GamingGroupGameDefinitionSummary;
    }

    @if (gamingGroupData != null)
    {
        <div class="row">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h4>Statistics for Gaming Group: <a href="@Url.Action(MVC.GamingGroup.Details().AddRouteValue("id", gamingGroupData.Id))">@gamingGroupData.Name</a></h4>
                </div>
                <div class="panel-body">
                    <table class="table table-hover table-striped">
                        <tr>
                            <td class="col-md-2"><strong>Total Games Played:</strong></td>
                            <td class="col-md-2">@gamingGroupData.TotalNumberOfGamesPlayed</td>
                        </tr>
                        <tr>
                            <td><strong>Average Players Per Game</strong></td>
                            <td>@gamingGroupData.AveragePlayersPerGame</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>

        <div class="row">
            @Html.Partial(MVC.Player.Views._GameDefinitionPlayersSummaryPartial, gamingGroupData.GameDefinitionPlayersSummary)
        </div>

        <div class="row">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h4>@gamingGroupData.PlayedGamesPanelTitle</h4>
                </div>
                <div class="panel-body">
                    <div class="table-responsive">
                        <table class="table table-hover table-striped">
                            <thead>
                                <tr>
                                    <th class="col-md-5">
                                        Date Played
                                    </th>
                                    <th class="col-md-6 result-head">
                                        Result
                                    </th>
                                    <th class="col-md-1 edit-head">

                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var playedGameViewModel in gamingGroupData.PlayedGames)
                                {
                                    <tr>
                                        <td>@playedGameViewModel.DatePlayed.ToShortDateString()</td>
                                        <td class="result-col">
                                            @foreach (var gameResultViewModel in playedGameViewModel.PlayerResults)
                                            {

                                                @Html.Partial(MVC.PlayedGame.Views._GameResult, gameResultViewModel)

                                            }
                                        </td>
                                        <td class="edit-col">
                                            <a href="@Url.Action("Details", "PlayedGame", new {id = playedGameViewModel.PlayedGameId})" title="Details">
                                                <i class="fa fa-book fa-2x"></i>
                                            </a>
                                            @if (playedGameViewModel.UserCanEdit)
                                            {
                                                <a href="@Url.Action("Edit", "PlayedGame", new {id = playedGameViewModel.PlayedGameId})" title="Edit">
                                                    <i class="fa fa-pencil fa-2x"></i>
                                                </a>
                                                <a href="@Url.Action("Delete", "PlayedGame", new {id = playedGameViewModel.PlayedGameId})" title="Delete">
                                                    <i class="fa fa-trash-o fa-2x"></i>
                                                </a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
    
</div>

