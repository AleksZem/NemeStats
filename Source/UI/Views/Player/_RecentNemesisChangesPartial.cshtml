@using UI.Models.Badges
@model IEnumerable<UI.Models.Nemeses.NemesisChangeViewModel>
<div id="nemesisChangeVote" class="fl-right" style="margin-top: 21px; margin-bottom: 10.5px;"></div>
<div class="fl-clear"></div>
<div class="flip-scroll">
	<table class="table table-hover table-striped" id="recentNemesisChangesTable">
		<thead>
			<tr>
			    <th>Minion <i class="@MinionBadgeViewModel.FONT_AWESOME_CSS_CLASS" data-toggle="popover" data-placement="top"
			                  data-content="This Player is now a Minion to the Nemesis Player."></i>
                </th>
				<th>
					Nemesis <i class="@NemesisBadgeViewModel.ICON_CSS_CLASS" data-toggle="popover" data-placement="top"
					               data-content="This Player is the new Nemesis of the Minion Player."></i>
				</th>
			    <th>Loss %</th>
			    <th>Date</th>
			</tr>
		</thead>
        @{ var position = 1; }
		@foreach (UI.Models.Nemeses.NemesisChangeViewModel nemesisChange in @Model)
		{
			<tr data-position="@position">
                @{ position++; }
				<td>@Html.ActionLink(nemesisChange.MinionPlayerName, "Details", "Player", new { id = nemesisChange.MinionPlayerId }, new { title = "View Player details" })</td>
				<td>@Html.ActionLink(nemesisChange.NemesisPlayerName, "Details", "Player", new { id = nemesisChange.NemesisPlayerId }, new { title = "View Player details" })</td>
			    <td>@nemesisChange.LossPercentageVersusNemesis&nbsp;%</td>
			    <td>@nemesisChange.DateCreated.ToShortDateString()</td>
			</tr>
		}
	</table>
</div>