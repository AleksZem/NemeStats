@using BusinessLogic.Models.PlayedGames
@using UI.HtmlHelpers
@model UI.Models.PlayedGame.GameResultViewModel

@{
    Layout = null;
}


<div class="player-game-rank">
    <div class="rank-name">
        <div class="rank rank-1">
            1<sup>st</sup>
        </div> 
        <div class="player-name">
            Ben Simonson
        </div>
    </div>
    <div class="nemepoints-breakdown">
        <table>
            <thead>
            <tr> 
                <th colspan="5" class="nemepoints-header">NemePoints <i class="fa fa-stack-1x letter"></i>            
                </th>
            </tr>
            <tr> 
                <th class="nemepoints-total">Total</th>
                <th></th>
                <th>Base</th>
                <th>Weight</th>
                <th>Time</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>188</td>
                <td class="nemepoints-equals">=</td>
                <td>19</td>
                <td>4</td>
                <td>0</td>
            </tr>
            </tbody>
        </table>  
    </div>  
</div> 

@*<div class="game-result">


    <div class="row">
        <div class="col-xs-7">
            <b>
                @Rank()

                @Html.ActionLink(Model.PlayerName, "Details", "Player", new { id = Model.PlayerId }, new { title = "View Player details" })

                @if (Model.PointsScored.HasValue && Model.ShowPointsScored)
                {
                    <span class="small">(@Model.PointsScored.Value.ToString("N0") game points scored)</span>
                }

            </b>
        </div>
        <div class="col-xs-5 total">
            <span data-toggle="popover" data-html="true" data-templateselector="#@Model.Id" data-title="NemePoints breakdown">
                @Model.NemePointsSummary.TotalNemePoints&nbsp;@Html.NemePointsIco()
            </span>
        </div>
    </div>

    @Html.Partial("_NemePointsBreakdown", Model.NemePointsSummary, new ViewDataDictionary { { "templateid", Model.Id } })
</div>

@helper Rank()
{

    if (@Model.WinnerType == WinnerTypes.TeamWin)
    {
        <span class="fa-stack rank" data-toggle="popover" data-placement="top" data-content="Everyone won!">
            <i class="fa fa-square fa-stack-2x text-success"></i>
            <i class="fa fa-inverse fa-stack-1x fa-smile-o"></i>
        </span>
    }
    else if (Model.WinnerType == WinnerTypes.TeamLoss)
    {
        <span class="fa-stack rank" data-toggle="popover" data-placement="top" data-content="Everyone lost">
            <i class="fa fa-square fa-stack-2x text-danger"></i>
            <i class="fa fa-inverse fa-stack-1x fa-frown-o"></i>
        </span>
    }
    else
    {
        <span class="fa-stack rank" data-toggle="popover" data-placement="top" data-content="Rank on game">
            <i class="fa fa-square fa-stack-2x"></i>
            <i class="fa fa-inverse fa-stack-1x value">@Model.GameRankString</i>
        </span>
    }
}*@

