@using System.Activities.Expressions
@model UI.Models.PlayedGame.NewlyCompletedGameViewModel

@{
    ViewBag.Title = "Record a game";
    Layout = MVC.Shared.Views._BaseLayout;
}

<h2>@ViewBag.Title</h2>
<hr />

<div class="panel panel-default">
    <div class="panel-heading">
        <h4>Game played</h4>
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-5">
                @using (Html.BeginForm("Create", MVC.PlayedGame.Name, FormMethod.Post, new { id = "recordPlayedGame" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.GameDefinitionId, "The Game", new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.DropDownList("GameDefinitionId", Model.GameDefinitions, "Pick A Game", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.GameDefinitionId)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DatePlayed, "Date Played", new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBox("DatePlayed", "", new { @class = "date-picker" })
                                @Html.ValidationMessageFor(model => model.DatePlayed)
                            </div>
                        </div>

                        <div class="form-group" id="playerDiv">
                            @Html.LabelFor(model => model.PlayerRanks, "The Players", new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.DropDownList("Players", Model.Players, "Add A Player", new { @class = "form-control" })
                                <span id="players-error" class="field-validation-error hidden">
                                    <span class="">Must pass in at least two players.</span>
                                </span>
                                <span id="players-error-rank-too-high" class="field-validation-error hidden">
                                    <span class="">No player can have a rank higher than the max number of players.</span>
                                </span>
                                @Html.ValidationMessageFor(model => model.PlayerRanks)
                            </div>
                            <div class="col-md-3">
                                <button type="button" id="btnAddPlayer" class=" btn btn-default" title="Create New Player">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">

                            </div>
                            <div class="col-md-9">
                                <ul id="rankedPlayers" class="sortable"></ul>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.Notes, "Game Notes", new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Notes,  new { @style = "width:100%", @rows = "8" })
                                @Html.ValidationMessageFor(model => model.Notes)
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-10">
                                <input type="submit" value="Create" class="btn btn-primary" id="createPlayedGameSubmit" />
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div id="addPlayer" class="col-md-7 hidden" style="margin-top: 90px">
                <a href="#addPlayer" id="addPlayerAnchor"></a>
                @Html.Action("SavePlayer", "Player")
            </div>
        </div>
    </div>
</div>


<div id="createdPlayedGameBack">
    @Html.ActionLink("Back To List", "Index", "GamingGroup", null, null, UI.Controllers.GamingGroupController.SECTION_ANCHOR_RECENT_GAMES, null, null)
</div>

@section Scripts{
    <script type="text/javascript">
        //Creation
        $(document).ready(function() {
            var createPlayedGame = new window.Views.PlayedGame.CreatePlayedGame();
            var googleAnalyticsObject = new window.Views.Shared.GoogleAnalytics();
            createPlayedGame.init(googleAnalyticsObject);

            var createOrUpdatePlayer = new window.Views.Player.CreateOrUpdate();
            createOrUpdatePlayer.init($.proxy(createPlayedGame.onPlayerCreated, createPlayedGame));
        });
    </script>
    
    <script id="player-item-template" type="text/x-handlebars-template">
        <li>
            <div style="cursor:pointer">
                <div class="alert alert-info" role="alert" style="max-width:300px;">
                    {{playerName}} - Rank:
                    <button style="padding: 3px 4px; margin-left:5px;" type="button" class="btn btn-default btnRemovePlayer fl-right" data-playername="{{playerName}}" data-playerid="{{playerId}}" title="Remove player">
                        <i class='fa fa-minus'></i>
                    </button>
                    <input class="fl-right" data-rule-required="true" data-rule-min="1" data-val="true" data-val-number="The field must be a number." data-val-required="" aria-required="true" aria-invalid="false" type="text" name="PlayerRanks[{{playerIndex}}].GameRank" value="{{playerRank}}" style="text-align:center;" />
                    <input type="hidden" name="PlayerRanks[{{playerIndex}}].PlayerId" value="{{playerId}}" />
                </div>
            </div>
        </li>
    </script>
}
